// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go
//
// Generated by this command:
//
//	mockgen -source=./interfaces.go -destination=./mock/storages.go -package=mock_storage
//

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	models "github.com/kajikentaro/isucon-middleware/isumid/models"
	gomock "go.uber.org/mock/gomock"
)

// MockStorageInterface is a mock of StorageInterface interface.
type MockStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStorageInterfaceMockRecorder
	isgomock struct{}
}

// MockStorageInterfaceMockRecorder is the mock recorder for MockStorageInterface.
type MockStorageInterfaceMockRecorder struct {
	mock *MockStorageInterface
}

// NewMockStorageInterface creates a new mock instance.
func NewMockStorageInterface(ctrl *gomock.Controller) *MockStorageInterface {
	mock := &MockStorageInterface{ctrl: ctrl}
	mock.recorder = &MockStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageInterface) EXPECT() *MockStorageInterfaceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockStorageInterface) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockStorageInterfaceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockStorageInterface)(nil).Close))
}

// CreateDir mocks base method.
func (m *MockStorageInterface) CreateDir() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDir")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDir indicates an expected call of CreateDir.
func (mr *MockStorageInterfaceMockRecorder) CreateDir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDir", reflect.TypeOf((*MockStorageInterface)(nil).CreateDir))
}

// FetchMeta mocks base method.
func (m *MockStorageInterface) FetchMeta(ulid string) (models.Meta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMeta", ulid)
	ret0, _ := ret[0].(models.Meta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMeta indicates an expected call of FetchMeta.
func (mr *MockStorageInterfaceMockRecorder) FetchMeta(ulid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMeta", reflect.TypeOf((*MockStorageInterface)(nil).FetchMeta), ulid)
}

// FetchMetaList mocks base method.
func (m *MockStorageInterface) FetchMetaList(offset, length int) ([]models.Meta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMetaList", offset, length)
	ret0, _ := ret[0].([]models.Meta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMetaList indicates an expected call of FetchMetaList.
func (mr *MockStorageInterfaceMockRecorder) FetchMetaList(offset, length any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMetaList", reflect.TypeOf((*MockStorageInterface)(nil).FetchMetaList), offset, length)
}

// FetchReproducedBody mocks base method.
func (m *MockStorageInterface) FetchReproducedBody(ulid string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchReproducedBody", ulid)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchReproducedBody indicates an expected call of FetchReproducedBody.
func (mr *MockStorageInterfaceMockRecorder) FetchReproducedBody(ulid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchReproducedBody", reflect.TypeOf((*MockStorageInterface)(nil).FetchReproducedBody), ulid)
}

// FetchReproducedHeader mocks base method.
func (m *MockStorageInterface) FetchReproducedHeader(ulid string) (map[string][]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchReproducedHeader", ulid)
	ret0, _ := ret[0].(map[string][]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchReproducedHeader indicates an expected call of FetchReproducedHeader.
func (mr *MockStorageInterfaceMockRecorder) FetchReproducedHeader(ulid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchReproducedHeader", reflect.TypeOf((*MockStorageInterface)(nil).FetchReproducedHeader), ulid)
}

// FetchReqBody mocks base method.
func (m *MockStorageInterface) FetchReqBody(ulid string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchReqBody", ulid)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchReqBody indicates an expected call of FetchReqBody.
func (mr *MockStorageInterfaceMockRecorder) FetchReqBody(ulid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchReqBody", reflect.TypeOf((*MockStorageInterface)(nil).FetchReqBody), ulid)
}

// FetchResBody mocks base method.
func (m *MockStorageInterface) FetchResBody(ulid string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchResBody", ulid)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchResBody indicates an expected call of FetchResBody.
func (mr *MockStorageInterfaceMockRecorder) FetchResBody(ulid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchResBody", reflect.TypeOf((*MockStorageInterface)(nil).FetchResBody), ulid)
}

// FetchTotalTransactions mocks base method.
func (m *MockStorageInterface) FetchTotalTransactions() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchTotalTransactions")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchTotalTransactions indicates an expected call of FetchTotalTransactions.
func (mr *MockStorageInterfaceMockRecorder) FetchTotalTransactions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchTotalTransactions", reflect.TypeOf((*MockStorageInterface)(nil).FetchTotalTransactions))
}

// Remove mocks base method.
func (m *MockStorageInterface) Remove(ulid string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", ulid)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockStorageInterfaceMockRecorder) Remove(ulid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockStorageInterface)(nil).Remove), ulid)
}

// RemoveAll mocks base method.
func (m *MockStorageInterface) RemoveAll() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveAll")
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveAll indicates an expected call of RemoveAll.
func (mr *MockStorageInterfaceMockRecorder) RemoveAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveAll", reflect.TypeOf((*MockStorageInterface)(nil).RemoveAll))
}

// Save mocks base method.
func (m *MockStorageInterface) Save(data models.RecordedDataInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockStorageInterfaceMockRecorder) Save(data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockStorageInterface)(nil).Save), data)
}

// SaveReproduced mocks base method.
func (m *MockStorageInterface) SaveReproduced(ulid string, body []byte, header map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveReproduced", ulid, body, header)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveReproduced indicates an expected call of SaveReproduced.
func (mr *MockStorageInterfaceMockRecorder) SaveReproduced(ulid, body, header any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveReproduced", reflect.TypeOf((*MockStorageInterface)(nil).SaveReproduced), ulid, body, header)
}

// SearchMetaList mocks base method.
func (m *MockStorageInterface) SearchMetaList(urlQuery string, offset, length int) ([]models.Meta, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchMetaList", urlQuery, offset, length)
	ret0, _ := ret[0].([]models.Meta)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// SearchMetaList indicates an expected call of SearchMetaList.
func (mr *MockStorageInterfaceMockRecorder) SearchMetaList(urlQuery, offset, length any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchMetaList", reflect.TypeOf((*MockStorageInterface)(nil).SearchMetaList), urlQuery, offset, length)
}
